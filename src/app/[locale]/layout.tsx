import Navbar from "@/components/header/Navbar";
import { Providers } from "@/lib/providers/ThemeProvider";
import type { LocaleLayoutProps } from "@/lib/types/types";
import { Metadata } from "next";
import { NextIntlClientProvider, useLocale, useMessages } from "next-intl";
import { Inter } from "next/font/google";
import { notFound } from "next/navigation";
import "./globals.css";
import LenisScrollProvider from "@/lib/providers/LenisScrollProvider";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function LocaleLayout({
  children,
  params: { locale },
}: LocaleLayoutProps) {
  const dir = locale === "ar" ? "rtl" : "ltr";
  const messages = useMessages();
  const nextLocale = useLocale();

  if (nextLocale !== locale) notFound();

  return (
    <html lang={locale} dir={dir} suppressHydrationWarning>
      <body className={inter.className}>
        <script
          dangerouslySetInnerHTML={{
            __html: `
            (function() {
              function getInitialColorMode() {
                const persistedColorPreference = window.localStorage.getItem('theme');
                const hasPersistedPreference = typeof persistedColorPreference === 'string';
                if (hasPersistedPreference) {
                  return persistedColorPreference;
                }
                const mql = window.matchMedia('(prefers-color-scheme: dark)');
                const hasMediaQueryPreference = typeof mql.matches === 'boolean';
                if (hasMediaQueryPreference) {
                  return mql.matches ? 'dark' : 'light';
                }
                return 'light';
              }
              const colorMode = getInitialColorMode();
              document.documentElement.setAttribute('data-theme', colorMode);
            })()
          `,
          }}
        />
        <Providers>
          <NextIntlClientProvider locale={locale} messages={messages}>
            <LenisScrollProvider>
              <Navbar />
              {children}
            </LenisScrollProvider>
          </NextIntlClientProvider>
        </Providers>
      </body>
    </html>
  );
}
